@page "/deposit"
@inject HttpClient Http

<h3 class="text-xl font-semibold mb-4">Deposit Funds</h3>

<EditForm Model="request" OnValidSubmit="Deposit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-4">
        <label class="block mb-1">Account Number:</label>
        <InputText @bind-Value="request.AccountNumber" class="border p-2 rounded w-64" />
    </div>

    <div class="mb-4">
        <label class="block mb-1">Amount:</label>
        <InputNumber @bind-Value="request.Amount" class="border p-2 rounded w-64" />
    </div>

    <button type="submit" class="bg-green-600 text-white px-4 py-2 rounded">Deposit</button>
</EditForm>

@if (!string.IsNullOrEmpty(Message))
{
    <div class="mt-4 text-lg font-medium @(IsSuccess ? "text-green-600" : "text-red-600")">
        @Message
    </div>
}

@code {
    private DepositRequest request = new();
    private string Message;
    private bool IsSuccess;

    private async Task Deposit()
    {
        Message = string.Empty;

        try
        {
            var response = await Http.PostAsJsonAsync("/api/accounts/deposit", request);

            if (response.IsSuccessStatusCode)
            {
                Message = "Deposit successful.";
                IsSuccess = true;
                request = new(); // reset form
            }
            else
            {
                Message = await response.Content.ReadAsStringAsync();
                IsSuccess = false;
            }
        }
        catch (Exception ex)
        {
            Message = $"Error: {ex.Message}";
            IsSuccess = false;
        }
    }

    public class DepositRequest
    {
        public string AccountNumber { get; set; }
        public decimal Amount { get; set; }
    }
}
