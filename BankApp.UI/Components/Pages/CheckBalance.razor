@page "/check-balance"
@inject HttpClient Http

<h3 class="text-xl font-semibold mb-4">Check Account Balance</h3>

<div class="mb-4">
    <MudTextField @bind-Value="AccountNumber" Label="Enter Account Number" Variant="Variant.Outlined"></MudTextField>

    <MudButton @onclick="CheckAccountBalance" Variant="Variant.Filled" Color="Color.Primary">Check</MudButton>
</div>

@if (ErrorMessage != null)
{
    <MudAlert Severity="Severity.Error" Variant="Variant.Filled">@ErrorMessage</MudAlert>

}
else if (Balance != null)
{
    <MudAlert Severity="Severity.Success" Variant="Variant.Filled">Balance: $@Balance</MudAlert>
}

@code {
    private string AccountNumber;
    private double? Balance;
    private string ErrorMessage;

    private async Task CheckAccountBalance()
    {
        ErrorMessage = null;
        Balance = null;

        if (string.IsNullOrWhiteSpace(AccountNumber))
        {
            ErrorMessage = "Please enter a valid account number.";
            return;
        }

        try
        {
            var response = await Http.GetAsync($"/api/accounts/balance/{AccountNumber}");

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<BalanceResponse>();
                Balance = result?.Balance;
            }
            else
            {
                ErrorMessage = await response.Content.ReadAsStringAsync();
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
        }
    }

    private class BalanceResponse
    {
        public double Balance { get; set; }
    }
}
